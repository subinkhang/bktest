
TRẢ LỜI CÁC CÂU HỎI CHỮ, GỒM CÂU: 2.1 - 2.2 - 3.3

================== Câu 2.1 với erd được vẽ ở câu hỏi 1, bạn đang sử dụng database nào để triển khai? ===============================================
- Sử dụng database in-memory NeDB để triển khai ứng dụng (dựa trên file src/datasource/db.datasource.ts)
- Database in-memory NeDB là một database NoSQL nhẹ, lưu trữ dữ liệu trong bộ nhớ RAM thay vì trên ổ đĩa

================== Câu 2.2 tại sao lại sử dụng database đó? Điểm mạnh và điểm yếu của nó? ================================================
-> Đặc điểm của database in-memory NeDB:
    - Lưu trữ dữ liệu trong bộ nhớ RAM, không cần cài đặt database server riêng.
    - Thích hợp cho các ứng dụng nhỏ, prototype hoặc môi trường phát triển.
    - Dữ liệu sẽ mất đi khi ứng dụng dừng hoạt động.

-> Lý do sử dụng database in-memory NeDB:
    - Dễ dàng thiết lập và sử dụng: Không cần cài đặt database server riêng, bạn chỉ cần thêm file db.json vào ứng dụng của mình.
    - Tốc độ truy cập nhanh: Dữ liệu được lưu trữ trong bộ nhớ RAM, vì vậy truy cập dữ liệu sẽ rất nhanh chóng.
    - Thích hợp cho môi trường phát triển: Database in-memory là một lựa chọn tốt cho môi trường phát triển, nơi bạn cần thử nghiệm nhanh chóng và dễ dàng.

-> Điểm mạnh
    - Tốc độ truy cập nhanh: Dữ liệu được lưu trữ trong bộ nhớ RAM, vì vậy truy cập dữ liệu sẽ rất nhanh chóng.
    - Kích thước nhỏ gọn: Database in-memory không cần cài đặt database server riêng, vì vậy nó có kích thước nhỏ gọn và dễ dàng di chuyển.
    - Dễ dàng thiết lập và sử dụng: Không cần cài đặt database server riêng, bạn chỉ cần thêm file db.json vào ứng dụng của mình.

-> Điểm yếu
    - Dữ liệu sẽ mất đi khi ứng dụng dừng hoạt động: Dữ liệu được lưu trữ trong bộ nhớ RAM, vì vậy khi ứng dụng dừng hoạt động, dữ liệu cũng sẽ bị mất đi.
    - Không hỗ trợ đầy đủ các tính năng nâng cao: Database in-memory thường không hỗ trợ đầy đủ các tính năng nâng cao của database quan hệ, chẳng hạn như ràng buộc khóa chính, khóa ngoại, ...

================== Câu 3.3 kể những điểm mạnh và điểm yếu của giải pháp của bạn. Cách để cải thiện chúng? ================================================
-> Điểm mạnh:
    - Sử dụng các công cụ và thư viện sẵn có của LoopBack4, giúp giảm thiểu thời gian và công sức phát triển.
    - Giúp đảm bảo tính linh hoạt và khả năng mở rộng của ứng dụng.
    - Cách triển khai này dễ dàng tích hợp với ứng dụng web.

-> Điểm yếu:
    - Cách triển khai này có thể không phù hợp với các ứng dụng yêu cầu tính bảo mật cao.
    - Không phù hợp với các ứng dụng yêu cầu hiệu suất cao vì sử dụng token xác thực: Token xác thực là một chuỗi băm được sử dụng để xác minh người dùng. Quá trình tạo và xác minh token xác thực có thể gây ra độ trễ nhất định

-> Cách cải thiện:
    - Sử dụng các phương pháp mã hóa token xác thực mạnh hơn.
    - Để cải thiện hiệu suất, có thể sử dụng các kỹ thuật caching và optimization.